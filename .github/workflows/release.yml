name: Release Packages

on:
  push:
    branches:
      - main

permissions: write-all

env:
  NODE_VERSION: "18.x"
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL }}
  PRE_RELEASE_TAG: ${{ vars.PRE_RELEASE_TAG }}
  AUTOMATION_USER_NAME: ${{ vars.AUTOMATION_USER_NAME }}
  AUTOMATION_USER_EMAIL: ${{ vars.AUTOMATION_USER_EMAIL }}
  PENDING_TAG: ${{ vars.PENDING_TAG }}
  PENDING_RELEASE_RUN_ID: ${{ vars.PENDING_RELEASE_RUN_ID }}

jobs:
  create-tag:
    name: Create Tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup git user
        run: |
          git config user.name ${{ env.AUTOMATION_USER_NAME }}
          git config user.email ${{ env.AUTOMATION_USER_EMAIL }}

      - name: Creating Tag ${{ env.PENDING_TAG }}
        run: |
          git tag --force -a ${{ env.PENDING_TAG }} -m "${{ env.PENDING_TAG }}" && git push origin ${{ env.PENDING_TAG }}  --no-verify

  create-release:
    if: contains(vars.PENDING_TAG, 'release')
    runs-on: ubuntu-latest
    needs: create-tag
    steps:
      - run: echo "Generating the Release for  '${{ env.PENDING_TAG }}'"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"
          always-auth: true

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          github-token: ${{ secrets.GH_ACTIONS }} # token with actions:read permissions on target repo
          repository: programad/ritest
          run-id: ${{ env.PENDING_RELEASE_RUN_ID }}

      - name: Show config
        run: cat /home/runner/work/_temp/.npmrc

      - name: Publish package
        run: |
          tar zxf *.tgz && (cd package && npm publish) && rm -fR package

      - name: Get package name
        id: get-package-name
        run: |
          echo "PKG_NAME=$(ls *.tgz)" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.PENDING_TAG  }}
          body_path: ${{ github.workspace }}/release-notes.md
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ${{ steps.get-package-name.outputs.PKG_NAME }}
